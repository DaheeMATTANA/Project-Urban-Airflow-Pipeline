{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.13", "generated_at": "2025-10-26T09:59:53.196799Z", "invocation_id": "88f5dd5e-8fdc-443a-a7dc-99bfc2c8d327", "invocation_started_at": "2025-10-26T09:59:51.716305Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.633671Z", "completed_at": "2025-10-26T09:59:52.653404Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.654192Z", "completed_at": "2025-10-26T09:59:52.654209Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0241544246673584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.urban_airflow_analytics.dim_calendar", "compiled": true, "compiled_code": "\n\n-- noqa: disable=RF02\n-- noqa: disable=RF04\n\nWITH\n\ndates_from_2024 AS (\n    SELECT *\n    FROM\n        GENERATE_SERIES(\n            DATE '2024-01-01'\n            , DATE_TRUNC('year', CURRENT_DATE)\n            + INTERVAL '4 year'\n            - INTERVAL '1 day'\n            , INTERVAL 1 DAY\n        ) AS t (date_of_day)\n)\n\n, new_dates AS (\n    SELECT *\n    FROM\n        dates_from_2024\n    \n        WHERE date_of_day > (SELECT MAX(date_of_day) FROM \"warehouse_prod\".\"main_urban_airflow_analytics\".\"dim_calendar\")\n    \n)\n\n, dates_enriched AS (\n    SELECT\n        *\n        -- Date comparable : date Y-1 with the same week number and weekday name\n        , date_of_day - INTERVAL '52 weeks' AS date_of_day_comparable\n        -- with ISO format, Monday is the first day of the week \n        , STRFTIME(DATE_TRUNC('year', date_of_day), '%Y') AS year\n        , DATE_TRUNC('week', date_of_day) AS iso_first_date_of_week\n        , DATE_TRUNC('week', date_of_day)\n        + INTERVAL 6 DAY AS iso_last_date_of_week\n        , STRFTIME(date_of_day, '%A') AS weekday_name_en\n        , EXTRACT(ISODOW FROM date_of_day) AS iso_day_of_week\n        , COALESCE(\n            EXTRACT(ISODOW FROM date_of_day) = 6\n            OR EXTRACT(ISODOW FROM date_of_day) = 7\n            , FALSE\n        ) AS is_weekend\n        , EXTRACT(WEEK FROM date_of_day) AS iso_week_number\n        , EXTRACT(MONTH FROM date_of_day) AS month_number\n        , EXTRACT(QUARTER FROM date_of_day) AS quarter_number\n    FROM\n        new_dates\n)\n\n, dates_comparable_by_week AS (\n    SELECT\n        *\n        , STRFTIME(DATE_TRUNC('year', date_of_day_comparable), '%Y')\n            AS year_comparable\n        , DATE_TRUNC('week', date_of_day_comparable)\n            AS iso_first_date_of_week_comparable\n        , DATE_TRUNC('week', date_of_day_comparable)\n        + INTERVAL 6 DAY AS iso_last_date_of_week_comparable\n        , CAST(CURRENT_TIMESTAMP AS TIMESTAMP) AS created_at_utc\n    FROM\n        dates_enriched\n)\n\nSELECT\n    date_of_day\n    , date_of_day_comparable\n    , year\n    , year_comparable\n    , iso_first_date_of_week\n    , iso_first_date_of_week_comparable\n    , iso_last_date_of_week\n    , iso_last_date_of_week_comparable\n    , weekday_name_en\n    , iso_day_of_week\n    , is_weekend\n    , iso_week_number\n    , month_number\n    , quarter_number\n    , created_at_utc\nFROM\n    dates_comparable_by_week", "relation_name": "\"warehouse_prod\".\"main_urban_airflow_analytics\".\"dim_calendar\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.645516Z", "completed_at": "2025-10-26T09:59:52.655901Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.657850Z", "completed_at": "2025-10-26T09:59:52.657860Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02653813362121582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.urban_airflow_analytics.my_first_dbt_model", "compiled": true, "compiled_code": "/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing \"table\" to \"view\" below\n*/\n\n\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\nwhere id is not null\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null", "relation_name": "\"warehouse_prod\".\"main\".\"my_first_dbt_model\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.650463Z", "completed_at": "2025-10-26T09:59:52.656747Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.658435Z", "completed_at": "2025-10-26T09:59:52.658444Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025730371475219727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.urban_airflow_analytics.stg_gbfs_station_information", "compiled": true, "compiled_code": "WITH\n\nsource_gbfs_station_status AS (\n    SELECT *\n    FROM \"dev_db\".\"raw\".\"raw_gbfs_station_information\"\n)\n\n, renamed AS (\n    SELECT\n        station_id\n        , stationcode AS station_code\n        , name AS station_name\n        , lat AS latitude\n        , lon AS longitude\n        , capacity\n        , station_opening_hours\n        , rental_methods\n        , ingestion_date AS part_date_utc\n        , ingestion_hour AS part_hour_utc\n        , created_at AS loaded_at_utc\n    FROM source_gbfs_station_status\n)\n\nSELECT\n    station_id\n    , station_code\n    , station_name\n    , latitude\n    , longitude\n    , capacity\n    , station_opening_hours\n    , rental_methods\n    , part_date_utc\n    , part_hour_utc\n    , loaded_at_utc\nFROM renamed", "relation_name": "\"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_gbfs_station_information\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.647966Z", "completed_at": "2025-10-26T09:59:52.657443Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.662818Z", "completed_at": "2025-10-26T09:59:52.662831Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030632495880126953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.urban_airflow_analytics.stg_french_holidays", "compiled": true, "compiled_code": "WITH\n\nsource_french_holidays AS (\n    SELECT *\n    FROM \"dev_db\".\"raw\".\"raw_french_holidays\"\n)\n\n, renamed AS (\n    SELECT\n        date AS holiday_date\n        , holiday_name AS holiday_name_fr\n        , is_national\n        , ingestion_date AS part_date_utc\n        , ingestion_hour AS part_hour_utc\n        , created_at AS created_at_utc\n    FROM source_french_holidays\n)\n\nSELECT\n    holiday_date\n    , holiday_name_fr\n    , is_national\n    , part_date_utc\n    , part_hour_utc\n    , created_at_utc\nFROM renamed", "relation_name": "\"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_french_holidays\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.659027Z", "completed_at": "2025-10-26T09:59:52.666081Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.667631Z", "completed_at": "2025-10-26T09:59:52.667640Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012324333190917969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.urban_airflow_analytics.stg_gbfs_station_status", "compiled": true, "compiled_code": "WITH\n\nsource_gbfs_station_status AS (\n    SELECT *\n    FROM \"dev_db\".\"raw\".\"raw_gbfs_station_status\"\n)\n\n, renamed AS (\n    SELECT\n        station_id\n        , num_bikes_available\n        , num_docks_available\n        , is_installed\n        , is_renting\n        , last_reported AS last_reported_utc\n        , timestamp_cet_cest AS last_reported_cet\n        , ingestion_date AS part_date_utc\n        , ingestion_hour AS part_hour_utc\n        , file_path AS bucket_file_path\n        , loaded_at AS loaded_at_utc\n        , is_returning\n    FROM source_gbfs_station_status\n)\n\nSELECT\n    station_id\n    , num_bikes_available\n    , num_docks_available\n    , is_installed\n    , is_renting\n    , last_reported_utc\n    , last_reported_cet\n    , part_date_utc\n    , part_hour_utc\n    , bucket_file_path\n    , loaded_at_utc\n    , is_returning\nFROM renamed", "relation_name": "\"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_gbfs_station_status\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.669147Z", "completed_at": "2025-10-26T09:59:52.677656Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.679314Z", "completed_at": "2025-10-26T09:59:52.679323Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013858556747436523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.urban_airflow_analytics.stg_open_meteo", "compiled": true, "compiled_code": "WITH\n\nsource_open_meteo AS (\n    SELECT *\n    FROM \"dev_db\".\"raw\".\"raw_open_meteo\"\n)\n\n, renamed AS (\n    SELECT\n        time AS timestamp_utc\n        , time_cet AS timestamp_cet\n        , temperature_2m\n        , precipitation\n        , precipitation_probability\n        , visibility\n        , windspeed_10m\n        , ingestion_date AS part_date_utc\n        , ingestion_hour AS part_hour_utc\n        , created_at AS loaded_at_utc\n    FROM source_open_meteo\n)\n\nSELECT\n    timestamp_utc\n    , timestamp_cet\n    , temperature_2m\n    , precipitation\n    , precipitation_probability\n    , visibility\n    , windspeed_10m\n    , part_date_utc\n    , part_hour_utc\n    , loaded_at_utc\nFROM renamed", "relation_name": "\"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_open_meteo\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.674611Z", "completed_at": "2025-10-26T09:59:52.678504Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.680273Z", "completed_at": "2025-10-26T09:59:52.680282Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013494253158569336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.urban_airflow_analytics.stg_transport_disruption", "compiled": true, "compiled_code": "WITH\n\nsource_transport_disruption AS (\n    SELECT *\n    FROM \"dev_db\".\"raw\".\"raw_transport_disruption\"\n)\n\n, renamed AS (\n    SELECT\n        event_id\n        , start_ts AS started_at_cet\n        , end_ts AS ended_at_cet\n        , cause AS disruption_cause_fr\n        , severity AS disruption_severity_fr\n        , title AS message_title_fr\n        , message AS message_body_fr\n        , ingestion_date AS part_date_utc\n        , ingestion_hour AS part_hour_utc\n        , created_at AS loaded_at_utc\n    FROM source_transport_disruption\n)\n\nSELECT\n    event_id\n    , started_at_cet\n    , ended_at_cet\n    , disruption_cause_fr\n    , disruption_severity_fr\n    , message_title_fr\n    , message_body_fr\n    , part_date_utc\n    , part_hour_utc\n    , loaded_at_utc\nFROM renamed", "relation_name": "\"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_transport_disruption\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.672374Z", "completed_at": "2025-10-26T09:59:52.679846Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.683945Z", "completed_at": "2025-10-26T09:59:52.683959Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.017595529556274414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.urban_airflow_analytics.stg_open_meteo_forecast", "compiled": true, "compiled_code": "WITH\n\nsource_open_meteo_forecast AS (\n    SELECT *\n    FROM \"dev_db\".\"raw\".\"raw_open_meteo_forecast\"\n)\n\n, renamed AS (\n    SELECT\n        time AS timestamp_utc\n        , time_cet AS timestamp_cet\n        , temperature_2m\n        , precipitation\n        , precipitation_probability\n        , visibility\n        , windspeed_10m\n        , ingestion_date AS part_date_utc\n        , ingestion_hour AS part_hour_utc\n        , created_at AS loaded_at_utc\n    FROM source_open_meteo_forecast\n)\n\nSELECT\n    timestamp_utc\n    , timestamp_cet\n    , temperature_2m\n    , precipitation\n    , precipitation_probability\n    , visibility\n    , windspeed_10m\n    , part_date_utc\n    , part_hour_utc\n    , loaded_at_utc\nFROM renamed", "relation_name": "\"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_open_meteo_forecast\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.680898Z", "completed_at": "2025-10-26T09:59:52.687847Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.698853Z", "completed_at": "2025-10-26T09:59:52.698864Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021887540817260742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.urban_airflow_analytics.urban_airflow_analytics-on-run-start-0", "compiled": true, "compiled_code": "\nattach '/home/dahee/Project-Urban-Airflow-Pipeline/actions-runner/_work/Project-Urban-Airflow-Pipeline/Project-Urban-Airflow-Pipeline/infra_platform/duckdb_data/warehouse_dev.duckdb' as dev_db;\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.689133Z", "completed_at": "2025-10-26T09:59:52.704265Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.709853Z", "completed_at": "2025-10-26T09:59:52.709862Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02436089515686035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.source_not_null_raw_raw_french_holidays_date.971eac4fc5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date\nfrom \"dev_db\".\"raw\".\"raw_french_holidays\"\nwhere date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.700031Z", "completed_at": "2025-10-26T09:59:52.710368Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.712244Z", "completed_at": "2025-10-26T09:59:52.712253Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025655031204223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.source_not_null_raw_raw_gbfs_station_information_station_id.a970535f3d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect station_id\nfrom \"dev_db\".\"raw\".\"raw_gbfs_station_information\"\nwhere station_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.704771Z", "completed_at": "2025-10-26T09:59:52.711883Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.716747Z", "completed_at": "2025-10-26T09:59:52.716756Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028594493865966797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.source_not_null_raw_raw_gbfs_station_status_station_id.8909a5b44a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect station_id\nfrom \"dev_db\".\"raw\".\"raw_gbfs_station_status\"\nwhere station_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.712837Z", "completed_at": "2025-10-26T09:59:52.718788Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.723450Z", "completed_at": "2025-10-26T09:59:52.723463Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014205694198608398, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.source_not_null_raw_raw_open_meteo_forecast_time.8186bbb52b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect time\nfrom \"dev_db\".\"raw\".\"raw_open_meteo_forecast\"\nwhere time is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.719658Z", "completed_at": "2025-10-26T09:59:52.725519Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.734939Z", "completed_at": "2025-10-26T09:59:52.734949Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01878952980041504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.source_not_null_raw_raw_open_meteo_time.febdee2925", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect time\nfrom \"dev_db\".\"raw\".\"raw_open_meteo\"\nwhere time is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.729240Z", "completed_at": "2025-10-26T09:59:52.736377Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.740970Z", "completed_at": "2025-10-26T09:59:52.740981Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01815009117126465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.source_unique_raw_raw_french_holidays_date.71885fdeb9", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    date as unique_field,\n    count(*) as n_records\n\nfrom \"dev_db\".\"raw\".\"raw_french_holidays\"\nwhere date is not null\ngroup by date\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.725994Z", "completed_at": "2025-10-26T09:59:52.737222Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.742116Z", "completed_at": "2025-10-26T09:59:52.742125Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02299022674560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.source_not_null_raw_raw_transport_disruption_event_id.9054c1d023", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_id\nfrom \"dev_db\".\"raw\".\"raw_transport_disruption\"\nwhere event_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.737690Z", "completed_at": "2025-10-26T09:59:52.743768Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.751433Z", "completed_at": "2025-10-26T09:59:52.751442Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017045974731445312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.source_unique_raw_raw_transport_disruption_event_id.a9b16ba8c7", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    event_id as unique_field,\n    count(*) as n_records\n\nfrom \"dev_db\".\"raw\".\"raw_transport_disruption\"\nwhere event_id is not null\ngroup by event_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.745045Z", "completed_at": "2025-10-26T09:59:52.758691Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.763071Z", "completed_at": "2025-10-26T09:59:52.763080Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021463871002197266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_accepted_range_dim_calendar_iso_day_of_week__7__1.438303934b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"warehouse_prod\".\"main_urban_airflow_analytics\".\"dim_calendar\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not iso_day_of_week >= 1\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not iso_day_of_week <= 7\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.754103Z", "completed_at": "2025-10-26T09:59:52.764087Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.768943Z", "completed_at": "2025-10-26T09:59:52.768954Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02440166473388672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_accepted_range_dim_calendar_month_number__12__1.17c0f22b29", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"warehouse_prod\".\"main_urban_airflow_analytics\".\"dim_calendar\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not month_number >= 1\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not month_number <= 12\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.759740Z", "completed_at": "2025-10-26T09:59:52.768478Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.770149Z", "completed_at": "2025-10-26T09:59:52.770157Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018096446990966797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_accepted_range_dim_calendar_quarter_number__4__1.5c9e121510", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"warehouse_prod\".\"main_urban_airflow_analytics\".\"dim_calendar\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not quarter_number >= 1\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not quarter_number <= 4\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.765225Z", "completed_at": "2025-10-26T09:59:52.771140Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.772946Z", "completed_at": "2025-10-26T09:59:52.772954Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013716459274291992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_dim_calendar_date_of_day.ccf0b980ef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_of_day\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"dim_calendar\"\nwhere date_of_day is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.773507Z", "completed_at": "2025-10-26T09:59:52.782119Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.786241Z", "completed_at": "2025-10-26T09:59:52.786250Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016710996627807617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_dim_calendar_weekday_name_en.4488ca7bd7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect weekday_name_en\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"dim_calendar\"\nwhere weekday_name_en is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.778842Z", "completed_at": "2025-10-26T09:59:52.787288Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.791321Z", "completed_at": "2025-10-26T09:59:52.791330Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018880367279052734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_dim_calendar_year.ae5808a716", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect year\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"dim_calendar\"\nwhere year is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.782948Z", "completed_at": "2025-10-26T09:59:52.790832Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.792473Z", "completed_at": "2025-10-26T09:59:52.792481Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01592707633972168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.unique_dim_calendar_date_of_day.de44b34d12", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    date_of_day as unique_field,\n    count(*) as n_records\n\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"dim_calendar\"\nwhere date_of_day is not null\ngroup by date_of_day\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.788515Z", "completed_at": "2025-10-26T09:59:52.793524Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.795470Z", "completed_at": "2025-10-26T09:59:52.795480Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013025283813476562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.urban_airflow_analytics.int_station_info_flagged", "compiled": true, "compiled_code": "WITH\n\nstation_information AS (\n    SELECT\n        station_id\n        , station_code\n        , station_name\n        , latitude\n        , longitude\n        , capacity\n        , station_opening_hours\n        , loaded_at_utc\n    FROM\n        \"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_gbfs_station_information\"\n)\n\n, add_valid_period AS (\n    SELECT\n        station_id\n        , station_code\n        , station_name\n        , latitude\n        , longitude\n        , capacity\n        , station_opening_hours\n        , loaded_at_utc AS valid_from\n        , LEAD(loaded_at_utc) OVER (\n            PARTITION BY station_id\n            ORDER BY loaded_at_utc\n        ) AS valid_to\n    FROM\n        station_information\n)\n\n, add_flags AS (\n    SELECT\n        *\n        , (valid_to IS NULL)\n            AS is_current\n        , COALESCE(station_opening_hours = 'DELETED', FALSE) AS is_deleted\n    FROM\n        add_valid_period\n)\n\nSELECT\n    station_id\n    , station_code\n    , station_name\n    , latitude\n    , longitude\n    , capacity\n    , station_opening_hours\n    , valid_from\n    , valid_to\n    , is_current\n    , is_deleted\nFROM\n    add_flags", "relation_name": "\"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_info_flagged\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.796204Z", "completed_at": "2025-10-26T09:59:52.805276Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.809279Z", "completed_at": "2025-10-26T09:59:52.809288Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01742076873779297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.urban_airflow_analytics.my_second_dbt_model", "compiled": true, "compiled_code": "-- Use the `ref` function to select from other models\n\nselect *\nfrom \"warehouse_prod\".\"main\".\"my_first_dbt_model\"\nwhere id = 1", "relation_name": "\"warehouse_prod\".\"main\".\"my_second_dbt_model\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.802015Z", "completed_at": "2025-10-26T09:59:52.810455Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.814995Z", "completed_at": "2025-10-26T09:59:52.815004Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020186424255371094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_my_first_dbt_model_id.5fb22c2710", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"warehouse_prod\".\"main\".\"my_first_dbt_model\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.806094Z", "completed_at": "2025-10-26T09:59:52.815542Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.817214Z", "completed_at": "2025-10-26T09:59:52.817223Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017557621002197266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_stg_gbfs_station_information_station_id.bcc7d0eeb2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect station_id\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_gbfs_station_information\"\nwhere station_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.811665Z", "completed_at": "2025-10-26T09:59:52.817805Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.819441Z", "completed_at": "2025-10-26T09:59:52.819449Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013828754425048828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.unique_my_first_dbt_model_id.16e066b321", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"warehouse_prod\".\"main\".\"my_first_dbt_model\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.820053Z", "completed_at": "2025-10-26T09:59:52.829090Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.833172Z", "completed_at": "2025-10-26T09:59:52.833181Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017194271087646484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_stg_french_holidays_holiday_date.f3d67fa249", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect holiday_date\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_french_holidays\"\nwhere holiday_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.824918Z", "completed_at": "2025-10-26T09:59:52.832718Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.840208Z", "completed_at": "2025-10-26T09:59:52.840238Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02184605598449707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.unique_stg_french_holidays_holiday_date.b6d090fcbd", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    holiday_date as unique_field,\n    count(*) as n_records\n\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_french_holidays\"\nwhere holiday_date is not null\ngroup by holiday_date\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.829616Z", "completed_at": "2025-10-26T09:59:52.844315Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.845898Z", "completed_at": "2025-10-26T09:59:52.845907Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02218461036682129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.urban_airflow_analytics.int_station_status_flagged", "compiled": true, "compiled_code": "-- noqa: disable=RF02\n\nWITH\n\nstation_status AS (\n    SELECT\n        station_id\n        , last_reported_utc\n        , last_reported_cet\n        , is_installed\n        , is_renting\n        , is_returning\n        , num_bikes_available\n        , num_docks_available\n    FROM\n        \"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_gbfs_station_status\"\n)\n\n, station_capacity_info AS (\n    SELECT\n        station_id\n        , capacity AS station_capacity\n    FROM\n        \"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_gbfs_station_information\"\n)\n\n, create_flags AS (\n    SELECT\n        station_status.*\n        , station_capacity\n        , coalesce(num_bikes_available = station_capacity, FALSE) AS is_full\n        , coalesce(num_docks_available = station_capacity, FALSE) AS is_empty\n        , station_capacity - (num_bikes_available + num_docks_available)\n            AS num_bikes_in_maintenance\n    FROM\n        station_status\n    LEFT JOIN\n        station_capacity_info\n        ON station_status.station_id = station_capacity_info.station_id\n)\n\nSELECT\n    station_id\n    , last_reported_utc\n    , last_reported_cet\n    , is_installed\n    , is_renting\n    , is_returning\n    , num_bikes_available\n    , num_docks_available\n    , station_capacity\n    , is_full\n    , is_empty\n    , num_bikes_in_maintenance\nFROM\n    create_flags", "relation_name": "\"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_status_flagged\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.833900Z", "completed_at": "2025-10-26T09:59:52.846897Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.848838Z", "completed_at": "2025-10-26T09:59:52.848847Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02022266387939453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_accepted_range_stg_gbfs_station_status_num_bikes_available__200__0.495e689fe2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_gbfs_station_status\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not num_bikes_available >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not num_bikes_available <= 200\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.849532Z", "completed_at": "2025-10-26T09:59:52.862730Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.868011Z", "completed_at": "2025-10-26T09:59:52.868022Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02270030975341797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_accepted_range_stg_gbfs_station_status_num_docks_available__200__0.0221cc527c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_gbfs_station_status\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not num_docks_available >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not num_docks_available <= 200\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.854065Z", "completed_at": "2025-10-26T09:59:52.866916Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.868761Z", "completed_at": "2025-10-26T09:59:52.868770Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022304534912109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_expression_is_true_stg_gbfs_station_status_last_reported_utc_last_reported_cet.44869bfa98", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_gbfs_station_status\"\n\nwhere not(last_reported_utc < last_reported_cet)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.863214Z", "completed_at": "2025-10-26T09:59:52.874697Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.876329Z", "completed_at": "2025-10-26T09:59:52.876337Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022855520248413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_stg_gbfs_station_status_station_id.3d9dd77074", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect station_id\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_gbfs_station_status\"\nwhere station_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.869397Z", "completed_at": "2025-10-26T09:59:52.877417Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.882148Z", "completed_at": "2025-10-26T09:59:52.882156Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0201871395111084, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_expression_is_true_stg_open_meteo_timestamp_utc_timestamp_cet.230f3a04ce", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_open_meteo\"\n\nwhere not(timestamp_utc < timestamp_cet)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.878773Z", "completed_at": "2025-10-26T09:59:52.887561Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.889232Z", "completed_at": "2025-10-26T09:59:52.889241Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.014012813568115234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_stg_open_meteo_timestamp_cet.b9f1cd9875", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect timestamp_cet\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_open_meteo\"\nwhere timestamp_cet is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.882734Z", "completed_at": "2025-10-26T09:59:52.888458Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.895150Z", "completed_at": "2025-10-26T09:59:52.895159Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019472599029541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_stg_open_meteo_timestamp_utc.770efc61de", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect timestamp_utc\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_open_meteo\"\nwhere timestamp_utc is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.889815Z", "completed_at": "2025-10-26T09:59:52.901781Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.903544Z", "completed_at": "2025-10-26T09:59:52.903554Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017752647399902344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_expression_is_true_stg_transport_disruption_started_at_cet_ended_at_cet.cfd0ce73af", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_transport_disruption\"\n\nwhere not(started_at_cet < ended_at_cet)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.897371Z", "completed_at": "2025-10-26T09:59:52.903123Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.911059Z", "completed_at": "2025-10-26T09:59:52.911069Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022343158721923828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_stg_transport_disruption_event_id.f9f63e280b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_id\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_transport_disruption\"\nwhere event_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.904321Z", "completed_at": "2025-10-26T09:59:52.913824Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.915641Z", "completed_at": "2025-10-26T09:59:52.915649Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015009403228759766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.unique_stg_transport_disruption_event_id.3b37b5a6fe", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    event_id as unique_field,\n    count(*) as n_records\n\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_transport_disruption\"\nwhere event_id is not null\ngroup by event_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.907584Z", "completed_at": "2025-10-26T09:59:52.915233Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.920005Z", "completed_at": "2025-10-26T09:59:52.920016Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01870250701904297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_expression_is_true_stg_open_meteo_forecast_timestamp_utc_timestamp_cet.0b45420bec", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_open_meteo_forecast\"\n\nwhere not(timestamp_utc < timestamp_cet)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.916665Z", "completed_at": "2025-10-26T09:59:52.926375Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.927698Z", "completed_at": "2025-10-26T09:59:52.927707Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01433253288269043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_stg_open_meteo_forecast_timestamp_cet.09c37a874b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect timestamp_cet\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_open_meteo_forecast\"\nwhere timestamp_cet is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.921313Z", "completed_at": "2025-10-26T09:59:52.928639Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.937620Z", "completed_at": "2025-10-26T09:59:52.937631Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023282766342163086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_stg_open_meteo_forecast_timestamp_utc.95c40082f6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect timestamp_utc\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"stg_open_meteo_forecast\"\nwhere timestamp_utc is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.929047Z", "completed_at": "2025-10-26T09:59:52.938994Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.940940Z", "completed_at": "2025-10-26T09:59:52.940949Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015168428421020508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.urban_airflow_analytics.dim_station", "compiled": true, "compiled_code": "WITH\n\nstation_info_with_flag AS (\n    SELECT\n        station_id\n        , station_code\n        , station_name\n        , latitude\n        , longitude\n        , capacity\n        , is_current\n        , is_deleted\n    FROM\n        \"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_info_flagged\"\n    WHERE\n        1 = 1\n        AND station_id IS NOT NULL\n)\n\nSELECT\n    station_id\n    , station_code\n    , station_name\n    , latitude\n    , longitude\n    , capacity\n    , is_current\n    , is_deleted\nFROM\n    station_info_with_flag", "relation_name": "\"warehouse_prod\".\"main_urban_airflow_analytics\".\"dim_station\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.932102Z", "completed_at": "2025-10-26T09:59:52.940534Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.945314Z", "completed_at": "2025-10-26T09:59:52.945324Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01861405372619629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_expression_is_true_int_station_info_flagged_valid_from_valid_to.6f84153596", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_info_flagged\"\n\nwhere not(valid_from < valid_to)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.941937Z", "completed_at": "2025-10-26T09:59:52.948396Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.953423Z", "completed_at": "2025-10-26T09:59:52.953432Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015073060989379883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_int_station_info_flagged_is_current.560485e57e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_current\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_info_flagged\"\nwhere is_current is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.948883Z", "completed_at": "2025-10-26T09:59:52.958162Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.962611Z", "completed_at": "2025-10-26T09:59:52.962619Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021168231964111328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_int_station_info_flagged_is_deleted.765ca1cdf5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_deleted\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_info_flagged\"\nwhere is_deleted is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.954550Z", "completed_at": "2025-10-26T09:59:52.963175Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.965106Z", "completed_at": "2025-10-26T09:59:52.965114Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017308473587036133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_int_station_info_flagged_station_id.96e057fb69", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect station_id\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_info_flagged\"\nwhere station_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.958703Z", "completed_at": "2025-10-26T09:59:52.964745Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.969557Z", "completed_at": "2025-10-26T09:59:52.969565Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.017065048217773438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_my_second_dbt_model_id.151b76d778", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"warehouse_prod\".\"main\".\"my_second_dbt_model\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.965789Z", "completed_at": "2025-10-26T09:59:52.971590Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.976184Z", "completed_at": "2025-10-26T09:59:52.976193Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014119863510131836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.unique_my_second_dbt_model_id.57a0f8c493", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"warehouse_prod\".\"main\".\"my_second_dbt_model\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.972478Z", "completed_at": "2025-10-26T09:59:52.987067Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.988294Z", "completed_at": "2025-10-26T09:59:52.988303Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019232988357543945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.urban_airflow_analytics.int_station_status_aggregated", "compiled": true, "compiled_code": "\n\nWITH\n\nstation_status AS (\n    SELECT *\n    FROM\n        \"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_status_flagged\"\n    \n        WHERE\n            last_reported_utc > (SELECT MAX(last_reported_utc) FROM \"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_status_aggregated\") -- noqa: RF02, LT05\n    \n)\n\n, aggregated_by_minute AS (\n    SELECT DISTINCT ON (station_id, last_reported_utc)\n        station_id\n        , last_reported_utc\n        , is_installed\n        , is_renting\n        , is_returning\n        , station_capacity\n        , AVG(num_bikes_available) OVER (\n            PARTITION BY station_id\n            ORDER BY last_reported_utc\n        ) AS avg_num_bikes_available\n        , AVG(num_docks_available) OVER (\n            PARTITION BY station_id\n            ORDER BY last_reported_utc\n        ) AS avg_num_docks_available\n        , AVG(CASE WHEN is_full = TRUE THEN 1 ELSE 0 END) OVER (\n            PARTITION BY station_id\n            ORDER BY last_reported_utc\n        ) AS pct_time_full\n        , AVG(CASE WHEN is_empty = TRUE THEN 1 ELSE 0 END) OVER (\n            PARTITION BY station_id\n            ORDER BY last_reported_utc\n        ) AS pct_time_empty\n        , AVG(num_bikes_in_maintenance) OVER (\n            PARTITION BY station_id\n            ORDER BY last_reported_utc\n        ) AS avg_num_bikes_in_maintenance\n    FROM\n        station_status\n)\n\n, added_timezone_cet AS (\n    SELECT\n        station_id\n        , last_reported_utc\n        , is_installed\n        , is_renting\n        , is_returning\n        , station_capacity\n        , avg_num_bikes_available\n        , avg_num_docks_available\n        , pct_time_full\n        , pct_time_empty\n        , avg_num_bikes_in_maintenance\n        , last_reported_utc AT TIME ZONE 'UTC' AT TIME ZONE 'Europe/Paris'\n            AS last_reported_cet\n    FROM\n        aggregated_by_minute\n)\n\nSELECT\n    station_id\n    , last_reported_utc\n    , last_reported_cet\n    , is_installed\n    , is_renting\n    , is_returning\n    , station_capacity\n    , avg_num_bikes_available\n    , avg_num_docks_available\n    , pct_time_full\n    , pct_time_empty\n    , avg_num_bikes_in_maintenance\nFROM\n    added_timezone_cet", "relation_name": "\"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_status_aggregated\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.978442Z", "completed_at": "2025-10-26T09:59:52.989063Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.991071Z", "completed_at": "2025-10-26T09:59:52.991082Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019152402877807617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_expression_is_true_int_station_status_flagged_last_reported_utc_last_reported_cet.6b33ffc58d", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_status_flagged\"\n\nwhere not(last_reported_utc < last_reported_cet)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.983462Z", "completed_at": "2025-10-26T09:59:52.989973Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:52.997350Z", "completed_at": "2025-10-26T09:59:52.997361Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021820783615112305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_expression_is_true_int_station_status_flagged_num_bikes_available_station_capacity.79eeba24c7", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_status_flagged\"\n\nwhere not(num_bikes_available <= station_capacity)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:52.992125Z", "completed_at": "2025-10-26T09:59:53.000784Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.008118Z", "completed_at": "2025-10-26T09:59:53.008130Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02072000503540039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_expression_is_true_int_station_status_flagged_num_bikes_in_maintenance_0.e10a677dd0", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_status_flagged\"\n\nwhere not(num_bikes_in_maintenance >= 0)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.002510Z", "completed_at": "2025-10-26T09:59:53.015222Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.021093Z", "completed_at": "2025-10-26T09:59:53.021106Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023097515106201172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_expression_is_true_int_station_status_flagged_num_docks_available_station_capacity.b32530e310", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_status_flagged\"\n\nwhere not(num_docks_available <= station_capacity)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.010782Z", "completed_at": "2025-10-26T09:59:53.020567Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.022638Z", "completed_at": "2025-10-26T09:59:53.022648Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0214080810546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_int_station_status_flagged_is_empty.7f48274d5c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_empty\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_status_flagged\"\nwhere is_empty is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.015733Z", "completed_at": "2025-10-26T09:59:53.024000Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.030192Z", "completed_at": "2025-10-26T09:59:53.030203Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028435468673706055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_int_station_status_flagged_is_full.3e60f9b6be", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_full\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_status_flagged\"\nwhere is_full is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.024601Z", "completed_at": "2025-10-26T09:59:53.031722Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.033921Z", "completed_at": "2025-10-26T09:59:53.033932Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01423954963684082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_int_station_status_flagged_station_id.bd2ea54b4a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect station_id\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_status_flagged\"\nwhere station_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.041684Z", "completed_at": "2025-10-26T09:59:53.052225Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.053946Z", "completed_at": "2025-10-26T09:59:53.054010Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02299332618713379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_accepted_range_dim_station_latitude__90___90.66206c90c4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"warehouse_prod\".\"main_urban_airflow_analytics\".\"dim_station\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not latitude >= -90\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not latitude <= 90\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.034674Z", "completed_at": "2025-10-26T09:59:53.052799Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.054848Z", "completed_at": "2025-10-26T09:59:53.054859Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025338411331176758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_accepted_range_dim_station_capacity__1000__0.747eef35ff", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"warehouse_prod\".\"main_urban_airflow_analytics\".\"dim_station\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not capacity >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not capacity <= 1000\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.047991Z", "completed_at": "2025-10-26T09:59:53.055709Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.062285Z", "completed_at": "2025-10-26T09:59:53.062298Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02127242088317871, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_accepted_range_dim_station_longitude__180___180.925abb95f4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"warehouse_prod\".\"main_urban_airflow_analytics\".\"dim_station\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not longitude >= -180\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not longitude <= 180\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.056247Z", "completed_at": "2025-10-26T09:59:53.064654Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.067241Z", "completed_at": "2025-10-26T09:59:53.067253Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02015519142150879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_dim_station_is_current.47c6238d15", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_current\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"dim_station\"\nwhere is_current is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.068708Z", "completed_at": "2025-10-26T09:59:53.080703Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.087190Z", "completed_at": "2025-10-26T09:59:53.087204Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023953914642333984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_dim_station_is_deleted.22575dc638", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_deleted\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"dim_station\"\nwhere is_deleted is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.073386Z", "completed_at": "2025-10-26T09:59:53.086055Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.088264Z", "completed_at": "2025-10-26T09:59:53.088275Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0242464542388916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_dim_station_station_id.34954bc218", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect station_id\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"dim_station\"\nwhere station_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.081303Z", "completed_at": "2025-10-26T09:59:53.092302Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.094401Z", "completed_at": "2025-10-26T09:59:53.094413Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02639317512512207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_dim_station_station_name.264a600ac8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect station_name\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"dim_station\"\nwhere station_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.089136Z", "completed_at": "2025-10-26T09:59:53.097891Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.104753Z", "completed_at": "2025-10-26T09:59:53.104766Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02479386329650879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.test_dim_station_one_current_per_station", "compiled": true, "compiled_code": "SELECT\n    station_id\nFROM \n    \"warehouse_prod\".\"main_urban_airflow_analytics\".\"dim_station\"\nGROUP BY\n    station_id\nHAVING 1 = 1\n    AND COUNT(DISTINCT is_current) > 1", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.099486Z", "completed_at": "2025-10-26T09:59:53.119049Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.121043Z", "completed_at": "2025-10-26T09:59:53.121056Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02589583396911621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.urban_airflow_analytics.fct_station_status", "compiled": true, "compiled_code": "WITH\n\nactive_station_status AS (\n    SELECT *\n    FROM\n        \"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_status_aggregated\"\n    WHERE 1 = 1\n    -- only the operational stations\n    AND is_installed = TRUE\n    AND is_renting = TRUE\n    -- filter by the date of pipeline stabilisation\n    AND last_reported_utc >= '2025-09-29'\n    -- exclude incomplete reporting stations\n    AND station_capacity IS NOT NULL\n)\n\nSELECT\n    station_id\n    , last_reported_cet\n    , avg_num_bikes_available\n    , avg_num_docks_available\n    , pct_time_full\n    , pct_time_empty\n    , avg_num_bikes_in_maintenance\nFROM\n    active_station_status", "relation_name": "\"warehouse_prod\".\"main_urban_airflow_analytics\".\"fct_station_status\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.105863Z", "completed_at": "2025-10-26T09:59:53.120422Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.122977Z", "completed_at": "2025-10-26T09:59:53.122989Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02714061737060547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_expression_is_true_int_station_status_aggregated_avg_num_bikes_available_station_capacity.8c8efd2991", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_status_aggregated\"\n\nwhere not(avg_num_bikes_available <= station_capacity)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.113350Z", "completed_at": "2025-10-26T09:59:53.121881Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.124783Z", "completed_at": "2025-10-26T09:59:53.124795Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02596759796142578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_expression_is_true_int_station_status_aggregated_avg_num_bikes_in_maintenance_0.ebc6405bcc", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_status_aggregated\"\n\nwhere not(avg_num_bikes_in_maintenance >= 0)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.125617Z", "completed_at": "2025-10-26T09:59:53.134495Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.141612Z", "completed_at": "2025-10-26T09:59:53.141625Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022112131118774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_expression_is_true_int_station_status_aggregated_avg_num_docks_available_station_capacity.fdfed11e43", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_status_aggregated\"\n\nwhere not(avg_num_docks_available <= station_capacity)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.136183Z", "completed_at": "2025-10-26T09:59:53.153215Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.155323Z", "completed_at": "2025-10-26T09:59:53.155336Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023594379425048828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_expression_is_true_int_station_status_aggregated_last_reported_utc_last_reported_cet.cba462f209", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_status_aggregated\"\n\nwhere not(last_reported_utc < last_reported_cet)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.143026Z", "completed_at": "2025-10-26T09:59:53.154703Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.157477Z", "completed_at": "2025-10-26T09:59:53.157495Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024466514587402344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_int_station_status_aggregated_station_id.40684d781f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect station_id\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"int_station_status_aggregated\"\nwhere station_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.148631Z", "completed_at": "2025-10-26T09:59:53.156370Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.159430Z", "completed_at": "2025-10-26T09:59:53.159441Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024527311325073242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_accepted_range_fct_station_status_avg_num_bikes_available__1000__0.48fee0a662", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"warehouse_prod\".\"main_urban_airflow_analytics\".\"fct_station_status\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not avg_num_bikes_available >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not avg_num_bikes_available <= 1000\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.160360Z", "completed_at": "2025-10-26T09:59:53.171739Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.188783Z", "completed_at": "2025-10-26T09:59:53.188797Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03494000434875488, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_accepted_range_fct_station_status_avg_num_docks_available__1000__0.3ee4b10bbb", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"warehouse_prod\".\"main_urban_airflow_analytics\".\"fct_station_status\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not avg_num_docks_available >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not avg_num_docks_available <= 1000\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.183946Z", "completed_at": "2025-10-26T09:59:53.190307Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.190923Z", "completed_at": "2025-10-26T09:59:53.190933Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020977497100830078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.not_null_fct_station_status_station_id.8677f8f5ee", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect station_id\nfrom \"warehouse_prod\".\"main_urban_airflow_analytics\".\"fct_station_status\"\nwhere station_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-26T09:59:53.172389Z", "completed_at": "2025-10-26T09:59:53.191926Z"}, {"name": "execute", "started_at": "2025-10-26T09:59:53.192425Z", "completed_at": "2025-10-26T09:59:53.192433Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02351999282836914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.urban_airflow_analytics.dbt_utils_unique_combination_of_columns_fct_station_status_station_id__last_reported_cet.004b65c828", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        station_id, last_reported_cet\n    from \"warehouse_prod\".\"main_urban_airflow_analytics\".\"fct_station_status\"\n    group by station_id, last_reported_cet\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 0.661475419998169, "args": {"cache_selected_only": false, "introspect": true, "static": false, "select": [], "require_generic_test_arguments_property": true, "strict_mode": false, "invocation_command": "dbt docs generate", "target": "prod", "warn_error_options": {"error": [], "warn": [], "silence": []}, "empty_catalog": false, "partial_parse": true, "write_json": true, "log_file_max_bytes": 10485760, "printer_width": 80, "use_colors_file": true, "macro_debugging": false, "log_format": "default", "validate_macro_args": false, "require_batched_execution_for_custom_microbatch_strategy": false, "version_check": true, "which": "generate", "log_path": "/home/dahee/Project-Urban-Airflow-Pipeline/actions-runner/_work/Project-Urban-Airflow-Pipeline/Project-Urban-Airflow-Pipeline/analytics/dbt/urban_airflow_analytics/logs", "require_yaml_configuration_for_mf_time_spines": false, "log_level_file": "debug", "vars": {}, "send_anonymous_usage_stats": true, "print": true, "favor_state": false, "show_resource_report": false, "log_format_file": "debug", "source_freshness_run_project_hooks": true, "require_all_warnings_handled_by_warn_error": false, "require_resource_names_without_spaces": true, "defer": false, "state_modified_compare_more_unrendered_values": false, "log_level": "info", "populate_cache": true, "profiles_dir": "../", "skip_nodes_if_on_run_start_fails": false, "require_explicit_package_overrides_for_builtin_materializations": true, "use_colors": true, "state_modified_compare_vars": false, "exclude": [], "indirect_selection": "eager", "upload_to_artifacts_ingest_api": false, "require_nested_cumulative_type_params": false, "use_fast_test_edges": false, "quiet": false, "partial_parse_file_diff": true, "static_parser": true, "project_dir": "/home/dahee/Project-Urban-Airflow-Pipeline/actions-runner/_work/Project-Urban-Airflow-Pipeline/Project-Urban-Airflow-Pipeline/analytics/dbt/urban_airflow_analytics", "compile": true, "show_all_deprecations": false}}